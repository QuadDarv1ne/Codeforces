"""
A. Кевин и кодовый замок
ограничение по времени на тест: 1 секунда
ограничение по памяти на тест: 256 мегабайт

Кевин попал из-за Грейс в ловушку в Прибрежной деревне. На выходе из деревни находится кодовый замок, 
который можно открыть только в том случае, если Кевин его разгадает.

В начале на кодовом замке написано целое число x, и Кевин может ноль или больше раз выполнить любую из 
следующих двух операций:

1. Если x≠33, он может выбрать две последовательные цифры 3 из x и удалить их одновременно. 
   Например, если x=13323, он может удалить вторую и третью 3, изменив x на 123.

2. Если x≥33, он может изменить x на x−33. 
   Например, если x=99, он может выбрать эту операцию, чтобы изменить x на 99−33=66.

Когда значение x на кодовом замке становится 0, Кевин может открыть замок и сбежать из деревни. 
Пожалуйста, определите, возможно ли Кевин открыть кодовый замок и сбежать.

Входные данные:
- Каждый тест состоит из нескольких наборов входных данных
- Первая строка содержит количество наборов t (1≤t≤104)
- Единственная строка каждого набора содержит положительное целое число x (1≤x≤109)

Выходные данные:
- Для каждого набора входных данных выведите «YES», если Кевин может открыть кодовый замок и сбежать, 
  и «NO» в противном случае
- Можно выводить ответ в любом регистре (верхнем или нижнем)
"""

def kevin_and_combination_lock(t, test_cases):
    results = []
    for x in test_cases:
        # Сразу приводим x по модулю 33 (остаток от деления на 33)
        x %= 33
        # Проверяем, содержит ли x подстроку "33"
        x_str = str(x)
        if x == 0 or "33" in x_str:
            # Если x стал 0 или содержит подряд две тройки, ответ ДА
            results.append("YES")
        else:
            # Иначе ответ НЕТ
            results.append("NO")
    return results

# Чтение входных данных
# Считываем количество тестов
t = int(input())  # Количество тестов
# Считываем все тесты в список
test_cases = [int(input()) for _ in range(t)]

# Решаем задачу
answers = kevin_and_combination_lock(t, test_cases)

# Выводим результаты
print("\n".join(answers))
